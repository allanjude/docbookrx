<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entities.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.one.b1">

    <!-- Title TEST -->
    <title>Chapter One</title>

    <!-- Titleabbrev TEST 
    <titleabbrev>Chapt1 Abbrev</titleabbrev> -->

    <!-- Subtitle TEST -->
    <subtitle>Chapter One Subtitle</subtitle>

    <!-- Info TEST -->
    <info>

        <abstract>
            <para>Test abstract</para>
        </abstract>
    </info>

    <!-- Trademark TEST 
    <para><trademark class='registered'>Nutshell Handbook</trademark> is a
        registered trademark of O'Reilly Media, Inc.
        6 </para>
    -->

    <!-- Link xref TEST -->
    <para>Standing atop NASA's historic <link
            xlink:href="https://www.space.com/25509-spacex-historic-nasa-apollo-launch-pad.html"
            >Launch Pad 39A</link>, the Falcon Heavy rocket ignited all 27 engines on its three-core
        of its first-stage at 12:30 p.m. </para>

    <!-- Section 1 TEST -->
    <sect1 xml:id="chapt.one.b1.sect1">
        <title>Section One</title>

        <!-- Link TEST -->
        <para>Standing atop NASA's historic <link
                xlink:href="https://www.space.com/25509-spacex-historic-nasa-apollo-launch-pad.html"
                >Launch Pad 39A</link>, the Falcon Heavy rocket ignited all 27 engines on its
            three-core of its first-stage at 12:30 p.m. </para>
        <remark>can also be used for linking to other sections by id within the same document <link
                linkend="chapt.one.b1.sect2">Section Two</link></remark>

        <!-- Procedure TEST -->
        <procedure>
            <title>Test Procedure</title>
            <step>
                <para>Do this first...</para>
            </step>
            <step>
                <para>Now do that...</para>
            </step>
            <step>
                <para>Then do this again...</para>
            </step>
        </procedure>

        <!-- Informal figure TEST -->
        <informalfigure>
            <mediaobject>
                <alt>Airplane Jokes Image</alt>
                <imageobject>
                    <imagedata fileref="airplanejokes.jpg"/>
                </imageobject>
            </mediaobject>
        </informalfigure>

        <!-- Figure TEST -->
        <figure>
            <title/>
            <mediaobject>
                <textobject><para>Its not always safer in numbers...</para></textobject>
                <imageobject role="fo">
                    <imagedata fileref="numbers.jpg" width="80%"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="numbers.jpg" width="80%"/>
                </imageobject>
            </mediaobject>
        </figure>

        <!-- Tip TEST -->

        <tip>
            <title>Tip</title>
            <para>It is not important to win, its important to make the other guys lose!</para>
        </tip>

        <!-- Note TEST -->
        <note>
            <title>Note</title>
            <para>Children on a rampage will be asked to leave. Thank you</para>
        </note>

        <!-- Caution TEST -->
        <caution>
            <title>Caution</title>
            <para>Caution pedestrians slippery when wet.</para>
        </caution>

        <!-- Important TEST -->
        <important>
            <title>Important</title>
            <para>Speed limit 35 unless, of course, Mr. important is running late.</para>
        </important>

        <!-- Warning TEST -->
        <warning>
            <title>Warning</title>
            <para>Do not touch! Not only will this kill you, it will hurt the whole time you are
                dying.</para>
        </warning>

        <!-- bridgehead TEST — A free-floating heading. -->
        <bridgehead renderas="sect2">Bridgehead (False heading with size attribute)</bridgehead>

        <!-- Variablelist TEST  NOTE: We may need to tests these lists when they are nested -->
        <para>Here comes a variablelist:</para>
        <variablelist>
            <varlistentry>
                <term>Variable List</term>
                <listitem>
                    <para>variablelist — A list in which each entry is composed of a set of one or
                        more terms and an associated description.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Another Variable Item</term>
                <listitem>
                    <para>Another description in the variable list.</para>
                </listitem>
            </varlistentry>
        </variablelist>

        <!-- Itemizedlist TEST NOTE: We may need to tests these lists when they are nested -->
        <para>Here comes an itemizedlist:</para>
        <itemizedlist>
            <listitem>
                <para>First item in the list</para>
            </listitem>
            <listitem>
                <para>Second item in the list.</para>
            </listitem>
        </itemizedlist>

        <!-- Orderedlist TEST NOTE: We may need to tests these lists when they are nested -->
        <para>Here comes an orderedlist:</para>
        <orderedlist>
            <listitem>
                <para>This is the first item.</para>
            </listitem>
            <listitem>
                <para>This is the second item.</para>
            </listitem>
        </orderedlist>

        <!-- Keycap TEST -->
        <para> The <keycap>F1</keycap> key on an IBM PC keyboard is located in the upper left
            quadrant. </para>

        <!-- Keycombo TEST -->
        <para><keycombo>
                <keycap>Shift</keycap>
                <mousebutton>Button1</mousebutton>
            </keycombo></para>
        <para><keycombo>
                <keycap>Shift</keycap>
                <mousebutton>Button1</mousebutton>
                <keycap>Ctrl</keycap>
                <keycap>c</keycap>
            </keycombo></para>
        <para><keycombo>
                <keycap>Ctrl</keycap>
                <keycap>alt</keycap>
                <keycap>t</keycap>
            </keycombo></para>

        <!-- Keycode TEST -->
        <para>The F1 key generates the scan code <keycode>0x3B</keycode>.</para>

        <!-- Filename TEST -->
        <para>The value for the F1 key is stored in <filename>keyboard.h</filename>.</para>

        <!-- Literal TEST -->
        <para xml:id="literal"> This is a <literal>Literal</literal> string.</para>

        <!-- Link TEST -->
        <para xml:id="link">See <link linkend="nextsect">this</link> to find more information on hot dogs and New
            York coffee.</para>

        <!-- xref TEST -->
        <para xml:id="xref">
            <xref linkend="chapt.one.b1.sect2" xrefstyle="SectTitleOnPage"/></para>

        <!-- Question and Answer TEST -->
        <qandaset>
            <qandaentry>
                <question>
                    <para> What is Docbook? </para>
                </question>
                <answer>
                    <para> DocBook is a schema (available in several languages including RELAX NG,
                        SGML and XML DTDs, and W3C XML Schema) maintained by the <link
                            xlink:href="mailto:docbook-tc@oasis-open.org">DocBook Technical
                            Committee</link> of <link xlink:href="http://www.oasis-open.org/"
                            >OASIS</link>. It is particularly well suited to books and papers about
                        computer hardware and software (though it is by no means limited to these
                        applications).</para>
                </answer>
            </qandaentry>
            <qandaentry>
                <question>
                    <para> What is Ruby? </para>
                </question>
                <answer>
                    <para> Ruby is... A dynamic, open source programming language with a focus on
                        simplicity and productivity. It has an elegant syntax that is natural to
                        read and easy to write. </para>
                </answer>
            </qandaentry>
        </qandaset>

        <!-- Calloutlist TEST -->
        <screen>-w /var/log/audit/ <co xml:id="co.auctllog"/>
-w /var/log/audit/audit.log

-w /var/log/audit/audit_log.1
-w /var/log/audit/audit_log.2
-w /var/log/audit/audit_log.3
-w /var/log/audit/audit_log.4

-w /etc/audit/auditd.conf -p wa<co xml:id="co.auctlconf"/>
-w /etc/audit/audit.rules -p wa
-w /etc/libaudit.conf -p wa</screen>
        <calloutlist>
            <callout arearefs="co.auctllog">
                <para> Set a watch on the directory where the audit log is located. Trigger an event
                    for any type of access attempt to this directory. If you are using log rotation,
                    add watches for the rotated logs as well. </para>
            </callout>
            <callout arearefs="co.auctlconf">
                <para> Set a watch on an audit configuration file. Log all write and attribute
                    change attempts to this file. </para>
            </callout>
        </calloutlist>

        <!-- Citetitle TEST -->
        <para>
            <citetitle pubwork="book">Developing SGML DTDs: From Text to Model to
            Markup</citetitle></para>
        <remark>pubwork (enumeration) attributes “article” “bbs” “book” “cdrom” “chapter” “dvd”
            “emailmessage” “gopher” “journal” “manuscript” “newsposting” “part” “refentry” “section”
            “series” “set” “webpage” “wiki”</remark>

        <!-- Email TEST -->
        <para xml:id="email"><email>example@example.com</email></para>

        <!-- Command TEST -->
        <para xml:id="command">The <command>ls -a</command> command is used to list all information about
            files.</para>

        <!-- Date TEST -->
            
        <para xml:id="date"><date>09/16/1978</date></para>

        <!-- Constant TEST -->
        <para xml:id="constant">To check your current <constant>$PATH</constant> from the CLI execute the following
            command: <screen>$ echo $PATH</screen>
        </para>

        <!-- Emphasis TEST -->
        <para xml:id="emphasis">
            <emphasis>This is the emphasis tag.</emphasis>
        </para>

        <!-- Example TEST -->
        <example xml:id="ex.dssslfunction">
            <title>A DSSSL Function</title>
                <screen>(define (node-list-filter-by-gi nodelist gilist)
     ;; Returns the node-list that contains every element of the original
     ;; nodelist whose gi is in gilist
    (let loop ((result (empty-node-list)) (nl nodelist))
        (if (node-list-empty? nl)
  	result
    	(if (member (gi (node-list-first nl)) gilist)
  	    (loop (node-list result (node-list-first nl)) 
    		  (node-list-rest nl))
  	    (loop result (node-list-rest nl))))))                </screen>
        </example>

        <!-- Formalpara TEST -->
        <formalpara>
            <title>Parameters</title>
            <para>The blah blah blah is used for blah blah blah.</para>
        </formalpara>

        <!-- Menuchoice TEST -->
        <para xml:id="menuchoice">
            <menuchoice>
                <guimenu>System</guimenu>
                <guimenu>Salt Systems</guimenu>
            </menuchoice>
        </para>

        <!-- Parameter TEST -->
        <para xml:id="parameter">Using the <parameter class="command">-l</parameter> parameter on the Linux
                <command>ls</command> command prints a long directory listing. </para>
        <remark>You can use command, function, or option as attribs</remark>

        <!-- Member TEST -->
        <para xml:id="member">
        <simplelist>
            <member>Item One</member>
            <member>Item Two</member>
        </simplelist>
        </para>

        <!-- Systemitem TEST -->
        <para xml:id="systemitem"><systemitem class="etheraddress">00:05:4E:49:FD:8E</systemitem></para>
        <remark>class Identifies the nature of the system item Enumerated values: “daemon” A daemon
            or other system process (syslogd) “domainname” A domain name (example.com)
            “etheraddress” An ethernet address (00:05:4E:49:FD:8E) “event” An event of some sort
            (SIGHUP) “eventhandler” An event handler of some sort (hangup) “filesystem” A filesystem
            (ext3) “fqdomainname” A fully qualified domain name (my.example.com) “groupname” A group
            name (wheel) “ipaddress” An IP address (127.0.0.1) “library” A library (libncurses)
            “macro” A macro “netmask” A netmask (255.255.255.192) “newsgroup” A newsgroup
            (comp.text.xml) “osname” An operating system name (Hurd) “process” A process
            (gnome-cups-icon) “protocol” A protocol (ftp) “resource” A resource “server” A server
            (mail.example.com) “service” A service (ppp) “systemname” A system name (hephaistos)
            “username” A user name (ndw)</remark>

        <!-- Replaceable TEST -->
        <para xml:id="replaceable">Exchange the <replaceable class="command">ls</replaceable> command with <replaceable
                class="command">ls -a</replaceable></para>
        <remark>class Identifies the nature of the replaceable text Enumerated values: “command” A
            command “function” A function “option” An option “parameter” A parameter</remark>

        <!-- Option TEST -->
        <para xml:id="option">The <option>-a</option> option on the <acronym>UNIX</acronym>
            <command>ls</command> command or the <option>/r</option> option on the
                <acronym>DOS</acronym>
            <command>attrib</command>command, for example.</para>

        <!-- Package TEST -->
        <para xml:id="package">The <package>YaST2</package> package should be installed...</para>

        <!-- See TEST (Used to link to another Index term) -->
        <indexterm>
            <primary>Extensible markup Language</primary>
            <see>XML</see>
        </indexterm>
        <indexterm><primary> XML is a markup language much like HTML. XML was designed to store and
                transport data.</primary></indexterm>

        <!-- Table TEST  
        <table xml:id="ex.calstable" frame="all">
            <title>Sample CALS Table</title>
            <tgroup cols="5" align="left" colsep="1" rowsep="1">
                <colspec colname="c1"/>
                <colspec colname="c2"/>
                <colspec colname="c3"/>
                <colspec colname="c4"/>
                <colspec colnum="5" colname="c5"/>
                <thead>
                    <row>
                        <entry namest="c1" nameend="c2" align="center">Horizontal Span a1</entry>
                        <entry>a2</entry>
                        <entry>a3</entry>
                        <entry>a4</entry>
                    </row>
                </thead>
                <tfoot>
                    <row>
                        <entry>f1</entry>
                        <entry>f2</entry>
                        <entry>f3</entry>
                        <entry>f4</entry>
                        <entry>f5</entry>
                    </row>
                </tfoot>
                <tbody>
                    <row>
                        <entry>b1</entry>
                        <entry>b2</entry>
                        <entry>b3</entry>
                        <entry>b4</entry>
                        <entry morerows="1" valign="middle"><para>Vertical Span</para>
                            <para> b5/c5</para></entry>
                    </row>
                    <row>
                        <entry>c1</entry>
                        <entry namest="c2" nameend="c3" align="center" morerows="1" valign="bottom"
                            >Span Both</entry>
                        <entry>c4</entry>
                    </row>
                    <row>
                        <entry>d1</entry>
                        <entry>d4</entry>
                        <entry>d5</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        -->

        <!-- Informaltable TEST (No TITLE)
        <informaltable>
            <tgroup cols="4">
                <tbody>
                    <row>
                        <entry>
                            <para>
                                Type
                            </para>
                        </entry>
                        <entry>
                            <para>
                                User Permissions
                            </para>
                        </entry>
                        <entry>
                            <para>
                                Group Permissions
                            </para>
                        </entry>
                        <entry>
                            <para>
                                Permissions for Others
                            </para>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <para>
                                <literal>&ndash;</literal>
                            </para>
                        </entry>
                        <entry>
                            <para>
                                <literal>rw&ndash;</literal>
                            </para>
                        </entry>
                        <entry>
                            <para>
                                <literal>r&ndash;&ndash;</literal>
                            </para>
                        </entry>
                        <entry>
                            <para>
                                <literal>r&ndash;&ndash;</literal>
                            </para>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </informaltable>
         -->

        <!-- Procedure + Stepalternatives and Substeps
        <procedure>
            <step>
                <para> Create a custom X.509 key and certificate used for signing: </para>
                <screen>openssl req -new -x509 -newkey rsa:2048 -keyout key.asc \
  -out cert.pem -nodes -days 666 -subj "/CN=$USER/"</screen>
            </step>
            <step>
                <para> Use <command>mokutil</command> to launch the MOK list automatically. </para>
                <stepalternatives>
                    <step>
                        <substeps>
                            <step>
                                <para> Import the certificate to MOK: </para>
                                <screen>mokutil &ndash;&ndash;root-pw &ndash;&ndash;import cert.der</screen>
                                <para> The <option>&ndash;&ndash;root-pw</option> option enables usage of the
                                    user directly. </para>
                            </step>
                        </substeps>
                    </step>
                    <step>
                        <substeps>
                            <step>
                                <para> Alternatively, this is the procedure if you want to launch
                                    MOK manually: </para>
                                <para> Reboot </para>
                            </step>
                        </substeps>
                    </step>
                </stepalternatives>
            </step>
        </procedure>
        -->

        <!-- URI TEST
        <para><uri> http://docbook.org/ns/docbook</uri></para>
         -->

        <!-- Varname TEST 
        <para>In Perl, <varname>@ARGV</varname> contains the command line parameters used when the
            script was run.</para>
        -->

        <!-- Section 2 TEST -->
        <sect2 xml:id="chapt.one.b1.sect2">
            <title>Section Two</title>

            <para>Nullam sed dolor ut nisi interdum euismod.</para>

            <!-- Section 3 TEST -->
            <sect3>
                <title>Section Three</title>
                <para>Nullam sed dolor ut nisi interdum euismod.</para>

                <!-- Section 4 TEST -->
                <sect4 xml:id="nextsect">
                    <title>Section Four</title>
                    <para>Nullam sed dolor ut nisi interdum euismod.</para>

                    <!-- Section 5 TEST -->
                    <sect5>
                        <title>Section Five</title>
                        <para>Nullam sed dolor ut nisi interdum euismod.</para>
                    </sect5>
                </sect4>
            </sect3>
        </sect2>
    </sect1>
</chapter>
